{"ast":null,"code":"import _slicedToArray from\"/workspaces/my-portfolio/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React from'react';import{useState}from'react';import{Container,Wrapper,Title,Desc,CardContainer,ToggleButtonGroup,ToggleButton,Divider}from'./ProjectsStyle';import ProjectCard from'../Cards/ProjectCards';import{projects}from'../../data/constants';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Projects=function Projects(_ref){var openModal=_ref.openModal,setOpenModal=_ref.setOpenModal;var _useState=useState('all'),_useState2=_slicedToArray(_useState,2),toggle=_useState2[0],setToggle=_useState2[1];return/*#__PURE__*/_jsx(Container,{id:\"projects\",children:/*#__PURE__*/_jsxs(Wrapper,{children:[/*#__PURE__*/_jsx(Title,{children:\"Projects\"}),/*#__PURE__*/_jsx(Desc,{children:\"I have worked on a wide range of projects. Here are some of my projects.\"}),/*#__PURE__*/_jsxs(ToggleButtonGroup,{children:[toggle==='all'?/*#__PURE__*/_jsx(ToggleButton,{active:true,value:\"all\",onClick:function onClick(){return setToggle('all');},children:\"All\"}):/*#__PURE__*/_jsx(ToggleButton,{value:\"all\",onClick:function onClick(){return setToggle('all');},children:\"All\"}),/*#__PURE__*/_jsx(Divider,{}),toggle==='frontend'?/*#__PURE__*/_jsx(ToggleButton,{active:true,value:\"frontend\",onClick:function onClick(){return setToggle('frontend');},children:\"FRONTEND\"}):/*#__PURE__*/_jsx(ToggleButton,{value:\"frontend\",onClick:function onClick(){return setToggle('frontend');},children:\"FRONTEND\"}),/*#__PURE__*/_jsx(Divider,{}),toggle==='backend'?/*#__PURE__*/_jsx(ToggleButton,{active:true,value:\"backend\",onClick:function onClick(){return setToggle('backend');},children:\"BACKEND\"}):/*#__PURE__*/_jsx(ToggleButton,{value:\"machine learning\",onClick:function onClick(){return setToggle('backend');},children:\"BACKEND\"}),/*#__PURE__*/_jsx(Divider,{}),toggle==='fullstack'?/*#__PURE__*/_jsx(ToggleButton,{active:true,value:\"web app\",onClick:function onClick(){return setToggle('fullstack');},children:\"FULLSTACK\"}):/*#__PURE__*/_jsx(ToggleButton,{value:\"fullstack\",onClick:function onClick(){return setToggle('fullstack');},children:\"FULLSTACK\"})]}),/*#__PURE__*/_jsxs(CardContainer,{children:[toggle==='all'&&projects.map(function(project){return/*#__PURE__*/_jsx(ProjectCard,{project:project,openModal:openModal,setOpenModal:setOpenModal});}),projects.filter(function(item){return item.category===toggle;}).map(function(project){return/*#__PURE__*/_jsx(ProjectCard,{project:project,openModal:openModal,setOpenModal:setOpenModal});})]})]})});};export default Projects;","map":{"version":3,"sources":["/workspaces/my-portfolio/src/components/Projects/index.js"],"names":["React","useState","Container","Wrapper","Title","Desc","CardContainer","ToggleButtonGroup","ToggleButton","Divider","ProjectCard","projects","Projects","openModal","setOpenModal","toggle","setToggle","map","project","filter","item","category"],"mappings":"8GAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,QAAT,KAAyB,OAAzB,CACA,OACIC,SADJ,CAEIC,OAFJ,CAGIC,KAHJ,CAIIC,IAJJ,CAKIC,aALJ,CAMIC,iBANJ,CAOIC,YAPJ,CAQIC,OARJ,KASO,iBATP,CAUA,MAAOC,CAAAA,WAAP,KAAwB,uBAAxB,CACA,OAASC,QAAT,KAAyB,sBAAzB,C,wFAEA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,MAAiC,IAA9BC,CAAAA,SAA8B,MAA9BA,SAA8B,CAAnBC,YAAmB,MAAnBA,YAAmB,CAC9C,cAA4Bb,QAAQ,CAAC,KAAD,CAApC,wCAAOc,MAAP,eAAeC,SAAf,eACA,mBACI,KAAC,SAAD,EAAW,EAAE,CAAC,UAAd,uBACI,MAAC,OAAD,yBACI,KAAC,KAAD,uBADJ,cAEI,KAAC,IAAD,uFAFJ,cAMI,MAAC,iBAAD,YACKD,MAAM,GAAK,KAAX,cACG,KAAC,YAAD,EACI,MAAM,KADV,CAEI,KAAK,CAAC,KAFV,CAGI,OAAO,CAAE,yBAAMC,CAAAA,SAAS,CAAC,KAAD,CAAf,EAHb,iBADH,cASG,KAAC,YAAD,EACI,KAAK,CAAC,KADV,CAEI,OAAO,CAAE,yBAAMA,CAAAA,SAAS,CAAC,KAAD,CAAf,EAFb,iBAVR,cAiBI,KAAC,OAAD,IAjBJ,CAkBKD,MAAM,GAAK,UAAX,cACG,KAAC,YAAD,EACI,MAAM,KADV,CAEI,KAAK,CAAC,UAFV,CAGI,OAAO,CAAE,yBAAMC,CAAAA,SAAS,CAAC,UAAD,CAAf,EAHb,sBADH,cASG,KAAC,YAAD,EACI,KAAK,CAAC,UADV,CAEI,OAAO,CAAE,yBAAMA,CAAAA,SAAS,CAAC,UAAD,CAAf,EAFb,sBA3BR,cAkCI,KAAC,OAAD,IAlCJ,CAmCKD,MAAM,GAAK,SAAX,cACG,KAAC,YAAD,EACI,MAAM,KADV,CAEI,KAAK,CAAC,SAFV,CAGI,OAAO,CAAE,yBAAMC,CAAAA,SAAS,CAAC,SAAD,CAAf,EAHb,qBADH,cASG,KAAC,YAAD,EACI,KAAK,CAAC,kBADV,CAEI,OAAO,CAAE,yBAAMA,CAAAA,SAAS,CAAC,SAAD,CAAf,EAFb,qBA5CR,cAmDI,KAAC,OAAD,IAnDJ,CAoDKD,MAAM,GAAK,WAAX,cACG,KAAC,YAAD,EACI,MAAM,KADV,CAEI,KAAK,CAAC,SAFV,CAGI,OAAO,CAAE,yBAAMC,CAAAA,SAAS,CAAC,WAAD,CAAf,EAHb,uBADH,cASG,KAAC,YAAD,EACI,KAAK,CAAC,WADV,CAEI,OAAO,CAAE,yBAAMA,CAAAA,SAAS,CAAC,WAAD,CAAf,EAFb,uBA7DR,GANJ,cA2EI,MAAC,aAAD,YACKD,MAAM,GAAK,KAAX,EACGJ,QAAQ,CAACM,GAAT,CAAa,SAACC,OAAD,qBACT,KAAC,WAAD,EACI,OAAO,CAAEA,OADb,CAEI,SAAS,CAAEL,SAFf,CAGI,YAAY,CAAEC,YAHlB,EADS,EAAb,CAFR,CASKH,QAAQ,CACJQ,MADJ,CACW,SAACC,IAAD,QAAUA,CAAAA,IAAI,CAACC,QAAL,GAAkBN,MAA5B,EADX,EAEIE,GAFJ,CAEQ,SAACC,OAAD,qBACD,KAAC,WAAD,EACI,OAAO,CAAEA,OADb,CAEI,SAAS,CAAEL,SAFf,CAGI,YAAY,CAAEC,YAHlB,EADC,EAFR,CATL,GA3EJ,GADJ,EADJ,CAmGH,CArGD,CAuGA,cAAeF,CAAAA,QAAf","sourcesContent":["import React from 'react';\r\nimport { useState } from 'react';\r\nimport {\r\n    Container,\r\n    Wrapper,\r\n    Title,\r\n    Desc,\r\n    CardContainer,\r\n    ToggleButtonGroup,\r\n    ToggleButton,\r\n    Divider,\r\n} from './ProjectsStyle';\r\nimport ProjectCard from '../Cards/ProjectCards';\r\nimport { projects } from '../../data/constants';\r\n\r\nconst Projects = ({ openModal, setOpenModal }) => {\r\n    const [toggle, setToggle] = useState('all');\r\n    return (\r\n        <Container id=\"projects\">\r\n            <Wrapper>\r\n                <Title>Projects</Title>\r\n                <Desc>\r\n                    I have worked on a wide range of projects. Here are some of\r\n                    my projects.\r\n                </Desc>\r\n                <ToggleButtonGroup>\r\n                    {toggle === 'all' ? (\r\n                        <ToggleButton\r\n                            active\r\n                            value=\"all\"\r\n                            onClick={() => setToggle('all')}\r\n                        >\r\n                            All\r\n                        </ToggleButton>\r\n                    ) : (\r\n                        <ToggleButton\r\n                            value=\"all\"\r\n                            onClick={() => setToggle('all')}\r\n                        >\r\n                            All\r\n                        </ToggleButton>\r\n                    )}\r\n                    <Divider />\r\n                    {toggle === 'frontend' ? (\r\n                        <ToggleButton\r\n                            active\r\n                            value=\"frontend\"\r\n                            onClick={() => setToggle('frontend')}\r\n                        >\r\n                            FRONTEND\r\n                        </ToggleButton>\r\n                    ) : (\r\n                        <ToggleButton\r\n                            value=\"frontend\"\r\n                            onClick={() => setToggle('frontend')}\r\n                        >\r\n                            FRONTEND\r\n                        </ToggleButton>\r\n                    )}\r\n                    <Divider />\r\n                    {toggle === 'backend' ? (\r\n                        <ToggleButton\r\n                            active\r\n                            value=\"backend\"\r\n                            onClick={() => setToggle('backend')}\r\n                        >\r\n                            BACKEND\r\n                        </ToggleButton>\r\n                    ) : (\r\n                        <ToggleButton\r\n                            value=\"machine learning\"\r\n                            onClick={() => setToggle('backend')}\r\n                        >\r\n                            BACKEND\r\n                        </ToggleButton>\r\n                    )}\r\n                    <Divider />\r\n                    {toggle === 'fullstack' ? (\r\n                        <ToggleButton\r\n                            active\r\n                            value=\"web app\"\r\n                            onClick={() => setToggle('fullstack')}\r\n                        >\r\n                            FULLSTACK\r\n                        </ToggleButton>\r\n                    ) : (\r\n                        <ToggleButton\r\n                            value=\"fullstack\"\r\n                            onClick={() => setToggle('fullstack')}\r\n                        >\r\n                            FULLSTACK\r\n                        </ToggleButton>\r\n                    )}\r\n                </ToggleButtonGroup>\r\n                <CardContainer>\r\n                    {toggle === 'all' &&\r\n                        projects.map((project) => (\r\n                            <ProjectCard\r\n                                project={project}\r\n                                openModal={openModal}\r\n                                setOpenModal={setOpenModal}\r\n                            />\r\n                        ))}\r\n                    {projects\r\n                        .filter((item) => item.category === toggle)\r\n                        .map((project) => (\r\n                            <ProjectCard\r\n                                project={project}\r\n                                openModal={openModal}\r\n                                setOpenModal={setOpenModal}\r\n                            />\r\n                        ))}\r\n                </CardContainer>\r\n            </Wrapper>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default Projects;\r\n"]},"metadata":{},"sourceType":"module"}